module ofoverlay {
    yang-version 1;

    namespace "urn:opendaylight:groupbasedpolicy:ofoverlay";
    prefix "ofoverlay";

    import ietf-inet-types { prefix "inet"; revision-date 2010-09-24; }

    import yang-ext {prefix ext; revision-date "2013-07-09";}
    import opendaylight-inventory {prefix inv;revision-date "2013-08-19";}

    import gbp-common {prefix gbp-common;}
    import endpoint {prefix endpoint;}

    description
        "This module defines the group-based policy ofoverlay renderer model.";

    revision "2014-05-28" {
        description
            "Initial revision.";
    }

    // ******************
    // Configuration Data
    // ******************
    container of-overlay-config {
        description
            "Configuration for the OpenFlow overlay renderer";

        config true;

        leaf encapsulation-format {
            description "The encapsulation format to use for tunnels";
            type enumeration {
                enum vxlan {
                    description "Use VXLAN encapsulation";
                }
            }
        }

        leaf learning-mode {
            description 
                "Selects how and whether we learn endpoints";
            type enumeration {
                enum orchestrated {
                    description 
                        "An external orchestration system will provide 
                         information about all endpoints, and no
                         direct learning will occur.";
                }
            }
        }
    }

    grouping endpoint-location {
        description 
            "The location for this endpoint in the overlay network";

        leaf location-type {
            default internal;

            type enumeration {
                enum internal {
                    description 
                    "The endpoint is located on a port that is part of 
                             the overlay network.  You must include the node ID
                             and port number for this endpoint.";
                }
                enum external {
                    description "This endpoint is not inside the overlay.";
                }
            }
        }

        leaf node-id {
            description 
                "The OpenFlow switch for the endpoint. Must be included 
                     for all internal endpoints.";
            type inv:node-id;
        }

        leaf port-number {
            description 
                "The port number of the OpenFlow port for the endpoint.  
                     Must be included for all internal endpoints";
            type uint32;
        }
    }

    augment "/endpoint:endpoints/endpoint:endpoint" {
        ext:augment-identifier "of-overlay-context";
        uses endpoint-location;
    }

    augment "/endpoint:register-endpoint/endpoint:input" {
        ext:augment-identifier "of-overlay-context-input";
        uses endpoint-location;
    }
}
